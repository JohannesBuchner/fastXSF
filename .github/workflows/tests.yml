name: build

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.12]

    steps:
    - uses: actions/checkout@v2

    - name: Install system dependencies
      run: sudo apt-get -y --no-install-recommends install -y ghostscript

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install the latest version of uv
      uses: astral-sh/setup-uv@v5
      with:
        python-version: ${{ matrix.python-version }}
        enable-cache: true

    - name: Install dependencies
      run: uv pip install -r requirements_dev.txt -r pip-requirements.txt

    - name: Lint with flake8
      run: flake8 fastxsf

    - name: Check code style
      run: pycodestyle fastxsf

    - name: Check doc style
      run: pydocstyle fastxsf

    - name: Cache xspec install
      uses: pat-s/always-upload-cache@v3.0.11
      id: cache-xspec
      env:
        cache-name: cache-xspec-install
        cache-version: 4
      with:
        path: ${{ env.MYCACHE }}/xspec-install
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.python-version }}-${{ env.cache-version }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.python-version }}-${{ env.cache-version }}
          ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.python-version }}

    - name: Download and Install heasoft (if necessary)
      run: |
          mkdir -p $MYCACHE
          pushd $MYCACHE
          if ! ls -d $MYCACHE/xspec-install/x86_64-pc-linux-gnu-libc*/; then
            rm -rf heasoft*/;
            wget -O - 'https://heasarc.gsfc.nasa.gov/cgi-bin/Tools/tarit/tarit.pl?mode=download&arch=src&src_pc_linux_ubuntu=Y&src_other_specify=&general=heasptools&general=heagen&xanadu=xspec' --header 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:84.0) Gecko/20100101 Firefox/84.0' --header 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8' --header 'Accept-Language: en-US' --header 'DNT: 1' --header 'Connection: keep-alive' --header 'Referer: https://heasarc.gsfc.nasa.gov/lheasoft/download.html' --header 'Upgrade-Insecure-Requests: 1' --header 'Sec-GPC: 1' --progress=dot:giga | tar -xzf -
            ls heasoft*;
            ls;
            echo "compiling xspec";
            sudo apt-get install -y gfortran build-essential cmake liblapack3 liblapack-dev libatlas3-base libatlas-base-dev libblas3 libblas-dev libreadline-dev;
            ls heasoft*;
            export XSPEC_BUILD_DIR=`ls -d heasoft-*/BUILD_DIR`;
            pushd $XSPEC_BUILD_DIR;
            mkdir -p $MYCACHE/xspec-install/;
            ./configure --prefix=$MYCACHE/xspec-install/ --with-components="Xspec" && make && make install | grep -v hd_install;
            ls $MYCACHE/xspec-install/x86_64-pc-linux-gnu-libc*/;
            popd;
          fi
    - name: Load heasoft
      run: |
          export HEADAS=`ls -d $MYCACHE/xspec-install/x86_64-pc-linux-gnu-libc*/`;
          echo "HEADAS=$HEADAS" >> $GITHUB_ENV
          ls $HEADAS;
          echo "loading xspec from " $HEADAS;
          source ${HEADAS}/headas-init.sh;
          echo "PYTHONPATH: $PYTHONPATH";
          echo "PATH: $PATH";
          echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV
          echo "PATH=$PATH" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH" >> $GITHUB_ENV
          python -c 'import xspec' || true;

    - name: Check install
      run: |
        python -c "import numpy";
        python -c "import xspec"

    - name: Prepare testing
      run: |
        echo "backend: Agg" > matplotlibrc

    #- name: Test with pytest
    #  run: PYTHONPATH=. coverage3 run -p -m pytest

    #- name: Run simple example
    #  run: PYTHONPATH=. coverage3 run -p simple.py

    #- name: Run simple example
    #  run: PYTHONPATH=. coverage3 run -p simple.py

    #- name: Run vectorized example
    #  run: PYTHONPATH=. coverage3 run -p simplev.py

    #- name: Run optimized nested sampling example
    #  run: PYTHONPATH=. coverage3 run -p optsimple.py

    - name: Install package
      run: uv pip install .

    - name: Coverage report
      run: |
        coverage3 combine
        coverage3 report
        coverage-lcov
        # make paths relative
        sed -i s,$PWD/,,g lcov.info

    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        path-to-lcov: lcov.info
        github-token: ${{ secrets.github_token }}
